
/* MIXIN > BLUEPRINT */
// Use by adding @include blueprint(0, 1); to preferred selector
// Add 0 or 1 for (in)active row or col, multiplied by thickness
@mixin blueprint($row, $col) {
	$thickness: 1px;
	.row {
		border: $row*$thickness dashed blue !important;
	}
	div[class^='col-'],div[class*=' col-'] {
		border: $col*$thickness dashed red !important;
	}
}


/* HELPER > WHICH BOOTSTRAP 5 BREAKPOINT IS ACTIVE? */
// A video explaining what this does is here: https://youtu.be/dQw4w9WgXcQ
.which-res {
  position: fixed;
  right: 10px;
  top: 10px;
  z-index: 2000;
  background-color: red;
  border: 4px solid #ffffff;
  color: #ffffff;
  width: 100px;
  height: auto;
  text-align: center;
  font-weight: bold;
  font-size: 30px;
  &::after {
    @media screen and (max-width: 575px)                            { content: 'XS'; }
    @media screen and (min-width: 576px) and (max-width: 767px)     { content: 'SM'; }
    @media screen and (min-width: 768px) and (max-width: 991px)     { content: 'MD'; }
    @media screen and (min-width: 992px) and (max-width: 1199px)    { content: 'LG'; }
    @media screen and (min-width: 1200px) and (max-width: 1399px)   { content: 'XL'; }
    @media screen and (min-width: 1400px)                           { content: 'XXL'; }
  }
}


/* BREAKPOINTS BOOTSTRAP 5
// Mixins with media queries that define 'up, 'down', 'only' and 'between'
// breakpoints. You can use these to define visibility of your classes,
// for each or a range of specific devices.
// See https://getbootstrap.com/docs/5.1/layout/breakpoints/#media-queries

// XS is often not needed, because Bootstrap is mobile-first

// SM and up        @include media-breakpoint-up(sm) { }
// MD and up        @include media-breakpoint-up(md) { }
// LG and up        @include media-breakpoint-up(lg) { }
// XL and up        @include media-breakpoint-up(xl) { }
// XXL and up       @include media-breakpoint-up(xxl) { }

// XS and down      @include media-breakpoint-down(sm) { }
// SM and down      @include media-breakpoint-down(md) { }
// MD and down      @include media-breakpoint-down(lg) { }
// LG and down      @include media-breakpoint-down(xl) { }
// XL and down      @include media-breakpoint-down(xxl) { }

// XS only          @include media-breakpoint-only(xs) { }
// SM only          @include media-breakpoint-only(sm) { }
// MD only          @include media-breakpoint-only(md) { }
// LG only          @include media-breakpoint-only(lg) { }
// XL only          @include media-breakpoint-only(xl) { }
// XXL only         @include media-breakpoint-only(xxl) { }

// MD to XL         @include media-breakpoint-between(md, xl) { }
// Etc

// Example
// Hide starting at 'min-width: 0', and then show at the 'SM' breakpoint
//   .custom-class {
//     display: none;
//   }
//   @include media-breakpoint-up(sm) {
//     .custom-class {
//       display: block;
//     }
//   }

*/


/* BASE > HOST */
:host {
  font-family: $font-host;
  font-size: $font-size;
  color: $font-color;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}


/* BASE > BODY */
html, body {
  position: relative;
  margin: 0;
  font-family: $font-main;
  font-size: $font-size;
  color: $font-color;
  background-color: $color-bg;
}

/* BASE > CONTAINERS */
header, main, footer {
  position: relative;
}


/* BASE > TEXT */
// First normalize them, then redefine them below
// 8px grid system = 8/16/24/32/40/48/56/64/72/80
h1, h2, h3, h4, h5, h6, p, ul:not(.navbar-nav, .dropdown-menu) {
  position: relative;
  margin: 0;
  margin-bottom: 10px;
  font-weight: normal;
  color: $color-primary;
}

h1 {
  font-family: $font-main;
  font-size: 20px;
  margin-bottom: 20px;
  margin-top: 20px;
  border-bottom: 1px dashed black;
  padding-bottom: 10px;
}

h2 {
  font-family: $font-main;
  font-size: 16px;
  font-weight: bold;
  margin-bottom: 10px;
}

h3, h4, h5, h6 {
  font-size: 22px;
  margin-bottom: 5px;
  font-weight: bold;
}

p, ul:not(.navbar-nav, .dropdown-menu) {
  color: $color-primary;
  margin: 0;
  font-size: $font-size;
  margin-bottom: 20px;
  line-height: 26px;
  &:last-child {
    margin-bottom: 0px;
  }
}

a {
  color: $color-secondary;
  text-decoration: underline;
  outline: none;
  &:hover, &:focus {
    color: $color-primary;
    outline: none;
  }
  &:active {
    outline: none;
  }
}

b, strong {
  font-weight: bold;
}

hr {
  width: 100%;
  height: 1px !important; // Or Reboot changes it to 1px
  background-color: rgba(0,0,0,1);
  opacity: 1;
}


/* BASE > HELPERS */
.mt-p5                { margin-top: 5px !important; }
.mt-p10               { margin-top: 10px !important; }
.mt-p15               { margin-top: 15px !important; }
.mt-p20               { margin-top: 20px !important; }
.mt-p30               { margin-top: 30px !important; }
.mt-p40               { margin-top: 40px !important; }

.mr-p5                { margin-right: 5px !important; }
.mr-p10               { margin-right: 10px !important; }
.mr-p15               { margin-right: 15px !important; }
.mr-p20               { margin-right: 20px !important; }
.mr-p30               { margin-right: 30px !important; }
.mr-p40               { margin-right: 40px !important; }

.mb-p5                { margin-bottom: 5px !important; }
.mb-p10               { margin-bottom: 10px !important; }
.mb-p15               { margin-bottom: 15px !important; }
.mb-p20               { margin-bottom: 20px !important; }
.mb-p30               { margin-bottom: 30px !important; }
.mb-p40               { margin-bottom: 40px !important; }

.ml-p5                { margin-left: 5px !important; }
.ml-p10               { margin-left: 10px !important; }
.ml-p15               { margin-left: 15px !important; }
.ml-p20               { margin-left: 20px !important; }
.ml-p30               { margin-left: 30px !important; }
.ml-p40               { margin-left: 40px !important; }

.spacer               { flex: 1; }
.no-margin            { margin: 0 !important; }

.text-left            { text-align: left; }
.text-center          { text-align: center; }
.text-right           { text-align: right; }
.text-uppercase       { text-transform: uppercase; }
.text-lowercase       { text-transform: lowercase; }

.clearer              { clear: both; }
.clearer-left         { clear: left; }
.clearer-right        { clear: right; }


// WHY WE STILL USE @IMPORT
// The order of SCSS imports is critical for Bootstrap customization. We must
// load our custom variables first, before Bootstrapâ€™s variables are imported,
// so Bootstrap uses our values, instead of its own. That is why we import
// them in step 2, then load their contents, other frameworks and then over-
// write their code in step 8.
//
// The newer SCSS module system (@use) enforces that all @use rules should
// come first, which conflicts with the classic @import-based Bootstrap
// workflow. Bootstrap has not fully transitioned to @use/@forward yet,
// mainly for compatibility and inertia.
//
// The reality:
// Bootstrap's SCSS is not fully compatible with the newer module system
// (@use/@forward) unless fully refactor Bootstrap's source files (which we
// do not want to do. Mixing @use and @import is only safe if all @use rules
// come first... but this breaks the variable override pattern we need.


// COMPILER INFO (SASS)
// - Use // as comments, because these are stripped
// - Compile this file to '../../public/css/styles-sass.css'
// - If applicable, accompanied with its own source map
// - Update your HTML to point to the compiled CSS file


// BOOTSTRAP SETUP
// - Option B, as shown at https://getbootstrap.com/docs/5.3/customize/sass/#importing
// - 1. Add functions first
// - 2. Add custom vars import
// - 3. Add required default vars import
// - 4. Add optional maps overrides
// - 5. Add remainder of required imports
// - 6. Add optional imports OR whole Bootstrap framework
// - 7. Add additional libraries
// - 8. Add additional custom (split-up) code

// 1. Functions
@import "bootstrap/5-3-7/functions";

// 2. Custom vars
@import "variables";

// 3. Required default vars
@import "bootstrap/5-3-7/variables";
@import "bootstrap/5-3-7/variables-dark";

// 4. Optional maps overrides
// None (see docs for details, if you need/want this)

// 5. Remainder required
@import "bootstrap/5-3-7/maps";
@import "bootstrap/5-3-7/mixins";
@import "bootstrap/5-3-7/root";

// 6. Whole framework
@import "bootstrap/5-3-7/bootstrap";

// 7. FONTAWESOME
@import "font-awesome/6-7-2/fontawesome";

// 7. FONTAWESOME > HACK
// - Helps make the font path work correctly in SASS!
// - This path is relative to the compiled CSS file
// - Does NOT have a trailing slash!
$fa-font-path: "../fonts/font-awesome/6-7-2/webfonts";

// 7. FONTAWESOME > IMPORTS
// - Enable certain fonts, depending on project
@import "font-awesome/6-7-2/regular";
@import "font-awesome/6-7-2/solid";
@import "font-awesome/6-7-2/brands";

// 8. INCLUDE ANY POSSIBLE SPLIT-UP SCSS FILES
// - Improves programmer usability
// - Specificity applies, so order them correctly
// @import "root";
// @import "helpers";
@import "base";
// @import "template";
// @import "application";
// @import "website";
// @import "hacks";
